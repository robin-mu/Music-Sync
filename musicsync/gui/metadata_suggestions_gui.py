# Form implementation generated from reading ui file 'ui/metadata_suggestions.ui'
#
# Created by: PyQt6 UI code generator 6.9.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PySide6 import QtCore, QtGui, QtWidgets


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(967, 768)
        font = QtGui.QFont()
        font.setPointSize(11)
        Dialog.setFont(font)
        self.gridLayout_3 = QtWidgets.QGridLayout(Dialog)
        self.gridLayout_3.setContentsMargins(0, 6, 6, 6)
        self.gridLayout_3.setHorizontalSpacing(0)
        self.gridLayout_3.setVerticalSpacing(6)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.buttonBox = QtWidgets.QDialogButtonBox(parent=Dialog)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.StandardButton.Cancel|QtWidgets.QDialogButtonBox.StandardButton.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.gridLayout_3.addWidget(self.buttonBox, 1, 0, 1, 1)
        self.tabWidget = QtWidgets.QTabWidget(parent=Dialog)
        self.tabWidget.setObjectName("tabWidget")
        self.tabWidgetPage1 = QtWidgets.QWidget()
        self.tabWidgetPage1.setObjectName("tabWidgetPage1")
        self.gridLayout = QtWidgets.QGridLayout(self.tabWidgetPage1)
        self.gridLayout.setObjectName("gridLayout")
        self.external_table_remove_button = QtWidgets.QToolButton(parent=self.tabWidgetPage1)
        icon = QtGui.QIcon.fromTheme("list-remove")
        self.external_table_remove_button.setIcon(icon)
        self.external_table_remove_button.setObjectName("external_table_remove_button")
        self.gridLayout.addWidget(self.external_table_remove_button, 2, 5, 1, 1)
        self.selected_field_label = QtWidgets.QLabel(parent=self.tabWidgetPage1)
        self.selected_field_label.setObjectName("selected_field_label")
        self.gridLayout.addWidget(self.selected_field_label, 2, 0, 1, 1)
        self.external_tables_table = QtWidgets.QTableView(parent=self.tabWidgetPage1)
        self.external_tables_table.setSelectionMode(QtWidgets.QAbstractItemView.SelectionMode.SingleSelection)
        self.external_tables_table.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectionBehavior.SelectRows)
        self.external_tables_table.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollMode.ScrollPerPixel)
        self.external_tables_table.setObjectName("external_tables_table")
        self.external_tables_table.verticalHeader().setVisible(False)
        self.gridLayout.addWidget(self.external_tables_table, 3, 3, 1, 3)
        self.label_3 = QtWidgets.QLabel(parent=self.tabWidgetPage1)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 2, 3, 1, 1)
        self.field_add_button = QtWidgets.QToolButton(parent=self.tabWidgetPage1)
        icon = QtGui.QIcon.fromTheme("list-add")
        self.field_add_button.setIcon(icon)
        self.field_add_button.setObjectName("field_add_button")
        self.gridLayout.addWidget(self.field_add_button, 0, 4, 1, 1)
        self.field_remove_button = QtWidgets.QToolButton(parent=self.tabWidgetPage1)
        icon = QtGui.QIcon.fromTheme("list-remove")
        self.field_remove_button.setIcon(icon)
        self.field_remove_button.setObjectName("field_remove_button")
        self.gridLayout.addWidget(self.field_remove_button, 0, 5, 1, 1)
        self.suggestions_remove_button = QtWidgets.QToolButton(parent=self.tabWidgetPage1)
        icon = QtGui.QIcon.fromTheme("list-remove")
        self.suggestions_remove_button.setIcon(icon)
        self.suggestions_remove_button.setObjectName("suggestions_remove_button")
        self.gridLayout.addWidget(self.suggestions_remove_button, 2, 2, 1, 1)
        self.external_table_add_button = QtWidgets.QToolButton(parent=self.tabWidgetPage1)
        icon = QtGui.QIcon.fromTheme("list-add")
        self.external_table_add_button.setIcon(icon)
        self.external_table_add_button.setObjectName("external_table_add_button")
        self.gridLayout.addWidget(self.external_table_add_button, 2, 4, 1, 1)
        self.scrollArea = QtWidgets.QScrollArea(parent=self.tabWidgetPage1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea.sizePolicy().hasHeightForWidth())
        self.scrollArea.setSizePolicy(sizePolicy)
        self.scrollArea.setMaximumSize(QtCore.QSize(16777215, 100))
        self.scrollArea.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.scrollArea.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 922, 159))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_2 = QtWidgets.QLabel(parent=self.scrollAreaWidgetContents)
        self.label_2.setMaximumSize(QtCore.QSize(16777215, 500))
        self.label_2.setWordWrap(True)
        self.label_2.setObjectName("label_2")
        self.verticalLayout.addWidget(self.label_2)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.gridLayout.addWidget(self.scrollArea, 4, 0, 1, 6)
        self.suggestions_add_button = QtWidgets.QToolButton(parent=self.tabWidgetPage1)
        icon = QtGui.QIcon.fromTheme("list-add")
        self.suggestions_add_button.setIcon(icon)
        self.suggestions_add_button.setObjectName("suggestions_add_button")
        self.gridLayout.addWidget(self.suggestions_add_button, 2, 1, 1, 1)
        self.fields_table = QtWidgets.QTableView(parent=self.tabWidgetPage1)
        self.fields_table.setSelectionMode(QtWidgets.QAbstractItemView.SelectionMode.SingleSelection)
        self.fields_table.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectionBehavior.SelectRows)
        self.fields_table.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollMode.ScrollPerPixel)
        self.fields_table.setSortingEnabled(True)
        self.fields_table.setObjectName("fields_table")
        self.fields_table.verticalHeader().setVisible(False)
        self.gridLayout.addWidget(self.fields_table, 1, 0, 1, 6)
        self.suggestions_table = QtWidgets.QTableView(parent=self.tabWidgetPage1)
        self.suggestions_table.setDragEnabled(True)
        self.suggestions_table.setDragDropMode(QtWidgets.QAbstractItemView.DragDropMode.InternalMove)
        self.suggestions_table.setDefaultDropAction(QtCore.Qt.DropAction.MoveAction)
        self.suggestions_table.setSelectionMode(QtWidgets.QAbstractItemView.SelectionMode.SingleSelection)
        self.suggestions_table.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectionBehavior.SelectRows)
        self.suggestions_table.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollMode.ScrollPerPixel)
        self.suggestions_table.setObjectName("suggestions_table")
        self.gridLayout.addWidget(self.suggestions_table, 3, 0, 1, 3)
        self.label = QtWidgets.QLabel(parent=self.tabWidgetPage1)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 4)
        self.gridLayout.setColumnStretch(0, 2)
        self.gridLayout.setColumnStretch(3, 1)
        self.gridLayout.setRowStretch(0, 1)
        self.gridLayout.setRowStretch(1, 1)
        self.gridLayout.setRowStretch(2, 1)
        self.gridLayout.setRowStretch(3, 1)
        self.tabWidget.addTab(self.tabWidgetPage1, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.tab)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.tags_table = QtWidgets.QTableView(parent=self.tab)
        self.tags_table.setSelectionMode(QtWidgets.QAbstractItemView.SelectionMode.SingleSelection)
        self.tags_table.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectionBehavior.SelectRows)
        self.tags_table.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollMode.ScrollPerPixel)
        self.tags_table.setObjectName("tags_table")
        self.tags_table.verticalHeader().setVisible(False)
        self.gridLayout_2.addWidget(self.tags_table, 1, 0, 1, 3)
        self.tag_combobox = QtWidgets.QComboBox(parent=self.tab)
        self.tag_combobox.setEditable(True)
        self.tag_combobox.setCurrentText("")
        self.tag_combobox.setObjectName("tag_combobox")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.tag_combobox.addItem("")
        self.gridLayout_2.addWidget(self.tag_combobox, 0, 0, 1, 1)
        self.tag_add_button = QtWidgets.QToolButton(parent=self.tab)
        self.tag_add_button.setText("")
        icon = QtGui.QIcon.fromTheme("list-add")
        self.tag_add_button.setIcon(icon)
        self.tag_add_button.setObjectName("tag_add_button")
        self.gridLayout_2.addWidget(self.tag_add_button, 0, 1, 1, 1)
        self.tag_remove_button = QtWidgets.QToolButton(parent=self.tab)
        self.tag_remove_button.setText("")
        icon = QtGui.QIcon.fromTheme("list-remove")
        self.tag_remove_button.setIcon(icon)
        self.tag_remove_button.setObjectName("tag_remove_button")
        self.gridLayout_2.addWidget(self.tag_remove_button, 0, 2, 1, 1)
        self.tabWidget.addTab(self.tab, "")
        self.gridLayout_3.addWidget(self.tabWidget, 0, 0, 1, 2)

        self.retranslateUi(Dialog)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Edit metadata suggestions and file tags"))
        self.external_table_remove_button.setToolTip(_translate("Dialog", "Remove external metadata table"))
        self.external_table_remove_button.setText(_translate("Dialog", "..."))
        self.selected_field_label.setText(_translate("Dialog", "Suggestions for selected field:"))
        self.label_3.setText(_translate("Dialog", "Metadata tables:"))
        self.field_add_button.setText(_translate("Dialog", "..."))
        self.field_remove_button.setText(_translate("Dialog", "..."))
        self.suggestions_remove_button.setText(_translate("Dialog", "..."))
        self.external_table_add_button.setToolTip(_translate("Dialog", "Add external metadata table"))
        self.external_table_add_button.setText(_translate("Dialog", "..."))
        self.label_2.setText(_translate("Dialog", "<html><head/><body>Special features:<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 0;\"><li style=\" margin-top:0px; margin-bottom:0px; margin-left:15px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Data from metadata tables can be referenced with &quot;[id]:[field]&quot;.</li><li style=\" margin-top:0px; margin-bottom:0px; margin-left:15px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">If a suggestion contains &quot;EXT_LYRICS:[format]&quot;, lyrics will be downloaded from external sources (syncedlyrics module) using [format] as the search term.</li><li style=\" margin-top:0px; margin-bottom:0px; margin-left:15px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">In fields containing timed data, a suggestion ending with &quot;+MULTI_VIDEO:[format]&quot; will have data from the individual videos of multi_video-type videos added into the field using [format]</li><li style=\" margin-top:0px; margin-bottom:0px; margin-left:15px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Metadata fields containing timed data can be merged together using a &quot;+&quot;, e.g. %(0_lyrics)s+%(0_chapters)s to merge lyrics and chapters into one LRC string</li></ul></body></html>"))
        self.suggestions_add_button.setToolTip(_translate("Dialog", "Shift+Click to add suggestion below current selection"))
        self.suggestions_add_button.setText(_translate("Dialog", "..."))
        self.label.setText(_translate("Dialog", "Metadata fields to generate suggestions for:"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabWidgetPage1), _translate("Dialog", "Metadata suggestions"))
        self.tag_combobox.setPlaceholderText(_translate("Dialog", "Enter tag name"))
        self.tag_combobox.setItemText(0, _translate("Dialog", "album"))
        self.tag_combobox.setItemText(1, _translate("Dialog", "album_artist"))
        self.tag_combobox.setItemText(2, _translate("Dialog", "album_artist-sort"))
        self.tag_combobox.setItemText(3, _translate("Dialog", "album-sort"))
        self.tag_combobox.setItemText(4, _translate("Dialog", "artist"))
        self.tag_combobox.setItemText(5, _translate("Dialog", "artist-sort"))
        self.tag_combobox.setItemText(6, _translate("Dialog", "category"))
        self.tag_combobox.setItemText(7, _translate("Dialog", "chapters"))
        self.tag_combobox.setItemText(8, _translate("Dialog", "comment"))
        self.tag_combobox.setItemText(9, _translate("Dialog", "compilation"))
        self.tag_combobox.setItemText(10, _translate("Dialog", "composer"))
        self.tag_combobox.setItemText(11, _translate("Dialog", "composer-sort"))
        self.tag_combobox.setItemText(12, _translate("Dialog", "copyright"))
        self.tag_combobox.setItemText(13, _translate("Dialog", "date"))
        self.tag_combobox.setItemText(14, _translate("Dialog", "description"))
        self.tag_combobox.setItemText(15, _translate("Dialog", "disc"))
        self.tag_combobox.setItemText(16, _translate("Dialog", "encoded_by"))
        self.tag_combobox.setItemText(17, _translate("Dialog", "genre"))
        self.tag_combobox.setItemText(18, _translate("Dialog", "grouping"))
        self.tag_combobox.setItemText(19, _translate("Dialog", "keywords"))
        self.tag_combobox.setItemText(20, _translate("Dialog", "language"))
        self.tag_combobox.setItemText(21, _translate("Dialog", "length"))
        self.tag_combobox.setItemText(22, _translate("Dialog", "lyricist"))
        self.tag_combobox.setItemText(23, _translate("Dialog", "lyrics"))
        self.tag_combobox.setItemText(24, _translate("Dialog", "mood"))
        self.tag_combobox.setItemText(25, _translate("Dialog", "movement"))
        self.tag_combobox.setItemText(26, _translate("Dialog", "movement_count"))
        self.tag_combobox.setItemText(27, _translate("Dialog", "movement_index"))
        self.tag_combobox.setItemText(28, _translate("Dialog", "performer"))
        self.tag_combobox.setItemText(29, _translate("Dialog", "publisher"))
        self.tag_combobox.setItemText(30, _translate("Dialog", "rating"))
        self.tag_combobox.setItemText(31, _translate("Dialog", "season_number"))
        self.tag_combobox.setItemText(32, _translate("Dialog", "show"))
        self.tag_combobox.setItemText(33, _translate("Dialog", "show-sort"))
        self.tag_combobox.setItemText(34, _translate("Dialog", "subtitle"))
        self.tag_combobox.setItemText(35, _translate("Dialog", "tempo"))
        self.tag_combobox.setItemText(36, _translate("Dialog", "thumbnail"))
        self.tag_combobox.setItemText(37, _translate("Dialog", "title"))
        self.tag_combobox.setItemText(38, _translate("Dialog", "title-sort"))
        self.tag_combobox.setItemText(39, _translate("Dialog", "tracknumber"))
        self.tag_combobox.setItemText(40, _translate("Dialog", "URL"))
        self.tag_combobox.setItemText(41, _translate("Dialog", "work"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("Dialog", "File Tags"))
